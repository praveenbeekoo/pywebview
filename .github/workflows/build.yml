name: Build Posterita Printer Utility

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # allow manual trigger

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: üß≠ Checkout repository
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'  # Enable pip caching

      - name: üìù Create version info
        run: |
          $version = Get-Date -Format "yyyy.MM.dd.HHmm"
          "VSVersionInfo(
            ffi=FixedFileInfo(
              filevers=($version.Split('.') -as [int[]]),
              prodvers=($version.Split('.') -as [int[]]),
              mask=0x3f,
              flags=0x0,
              OS=0x40004,
              fileType=0x1,
              subtype=0x0,
              date=(0, 0)
            ),
            kids=[
              StringFileInfo([StringTable(
                u'040904B0',
                [StringStruct(u'CompanyName', u'Posterita Ltd'),
                 StringStruct(u'FileDescription', u'Posterita POS Printer Utility'),
                 StringStruct(u'FileVersion', u'$version'),
                 StringStruct(u'InternalName', u'PosteritaPrinterUtility'),
                 StringStruct(u'LegalCopyright', u'¬© Posterita Ltd'),
                 StringStruct(u'ProductName', u'Posterita Printer Utility'),
                 StringStruct(u'ProductVersion', u'$version')])]),
              VarFileInfo([VarStruct(u'Translation', [1033, 1200])])
            ]
          )" | Out-File -FilePath "version_info.txt" -Encoding utf8

      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install GTK for webview support
          choco install -y mingw gtk3
          # Install Python dependencies from requirements.txt
          pip install -r requirements.txt

      - name: üèó Build executable with PyInstaller
        working-directory: ${{ github.workspace }}
        shell: pwsh
        run: |
          Write-Output "github.workspace=${{ github.workspace }}"
          Write-Output "Listing repository root to help diagnose missing files"
          Get-ChildItem -Force | Format-List Name,Mode,Length

          Write-Output "--- printer_app.spec contents ---"
          Get-Content -Raw "printer_app.spec"
          Write-Output "--- end spec ---"

          # Build the executable
          pyinstaller "printer_app.spec"

      - name: ‚úÖ Validate build
        shell: pwsh
        run: |
          $exePath = "dist/PosteritaPrinterUtility/PosteritaPrinterUtility.exe"
          if (!(Test-Path $exePath)) {
            Write-Error "Build failed: Executable not found at $exePath"
            exit 1
          }
          
          # Check file version info
          $fileVersion = (Get-Item $exePath).VersionInfo.FileVersion
          if (!$fileVersion) {
            Write-Error "Build validation failed: No version information found"
            exit 1
          }
          
          Write-Output "Build validated successfully! Version: $fileVersion"

      - name: üìÅ Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PosteritaPrinterUtility
          path: dist/PosteritaPrinterUtility/
          if-no-files-found: error  # Fail if no files are found to upload
